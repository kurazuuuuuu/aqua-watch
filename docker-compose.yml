services:
  frontend:
    build: ./frontend
    ports:
      - "11100:80"
    depends_on:
      - backend
    networks:
      - aqua-network

  backend:
    build: ./backend
    ports:
      - "11101:5000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=postgres
      - DB_PORT=5432
    depends_on:
      - postgres
      - redis
    volumes:
      - image_uploads:/app/uploads
    networks:
      - aqua-network

  ai-service:
    build: ./ai-service
    ports:
      - "11102:8000"
    volumes:
      - image_uploads:/app/uploads
    networks:
      - aqua-network

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "11103:5432"
    networks:
      - aqua-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "11104:6379"
    networks:
      - aqua-network

volumes:
  postgres_data:
  redis_data:
  image_uploads:

networks:
  aqua-network:
    driver: bridge
